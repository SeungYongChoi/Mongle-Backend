name: Java CD with Gradle, Docker, Aws

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: make main properties
      run: |
        cd ./src/main
        mkdir resources
        cd ./resources
        touch ./application.properties
        echo "${{ secrets.PROPERTIES_PROD }}" > ./application.properties
      shell: bash    
      

    - name: make main fcm json
      run: |
        cd ./src/main/resources
        mkdir firebase
        cd ./firebase
        touch ./monglemongle-firebase-adminsdk-zrey9-3a66b2259a.json
        echo '${{ secrets.FIREBASE_JSON }}' > ./monglemongle-firebase-adminsdk-zrey9-3a66b2259a.json
      shell: bash        
      
  
    - name: make test properties
      run: |
        cd ./src/test
        mkdir resources
        cd ./resources
        touch ./application.properties
        echo "${{ secrets.TEST_PROPERTIES }}" > ./application.properties
      shell: bash    
  
    - name: make test fcm json
      run: |
        cd ./src/test/resources
        mkdir firebase
        cd ./firebase
        touch ./monglemongle-firebase-adminsdk-zrey9-3a66b2259a.json
        echo '${{ secrets.FIREBASE_JSON }}' > ./monglemongle-firebase-adminsdk-zrey9-3a66b2259a.json
      shell: bash    
 
    
    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build
        
    - name: Docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PWD }}
        docker build -t ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_REPOSITORY_PROD }}:${GITHUB_SHA::7} .
        docker push ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_REPOSITORY_PROD }}:${GITHUB_SHA::7}
        
    - name: SSH proxy command - A
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_SERVER_IP_A }}
        username: ec2-user
        key: ${{ secrets.PRIVATE_PEM_KEY }}
        proxy_host: ${{ secrets.BASTION_IP }} 
        proxy_username: ec2-user
        proxy_key: ${{ secrets.PUBLIC_PEM_KEY }}
        envs: GITHUB_SHA
        script: |
          docker pull ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_REPOSITORY_PROD }}:${GITHUB_SHA::7}
          docker tag ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_REPOSITORY_PROD }}:${GITHUB_SHA::7} mongle-backend
          docker stop mongle-backend
          docker run -d --rm --name mongle-backend -p 8080:8080 mongle-backend
          
    - name: SSH proxy command - C
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PROD_SERVER_IP_C }}
        username: ec2-user
        key: ${{ secrets.PRIVATE_PEM_KEY }}
        proxy_host: ${{ secrets.BASTION_IP }} 
        proxy_username: ec2-user
        proxy_key: ${{ secrets.PUBLIC_PEM_KEY }}
        envs: GITHUB_SHA
        script: |
          docker pull ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_REPOSITORY_PROD }}:${GITHUB_SHA::7}
          docker tag ${{ secrets.DOCKER_ID }}/${{ secrets.DOCKER_REPOSITORY_PROD }}:${GITHUB_SHA::7} mongle-backend
          docker stop mongle-backend
          docker run -d --rm --name mongle-backend -p 8080:8080 mongle-backend

  
